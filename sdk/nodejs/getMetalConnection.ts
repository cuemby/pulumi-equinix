// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve a [connection resource](https://metal.equinix.com/developers/docs/networking/fabric/)
 *
 * > Equinix Metal connection with serviceTokenType `aSide` is not generally available and may not be enabled yet for your organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@pulumi/equinix";
 *
 * const example = pulumi.output(equinix.GetMetalConnection({
 *     connectionId: "4347e805-eb46-4699-9eb9-5c116e6a017d",
 * }));
 * ```
 */
export function getMetalConnection(args: GetMetalConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalConnectionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("equinix:index/getMetalConnection:GetMetalConnection", {
        "connectionId": args.connectionId,
    }, opts);
}

/**
 * A collection of arguments for invoking GetMetalConnection.
 */
export interface GetMetalConnectionArgs {
    /**
     * ID of the connection resource.
     */
    connectionId: string;
}

/**
 * A collection of values returned by GetMetalConnection.
 */
export interface GetMetalConnectionResult {
    readonly connectionId: string;
    /**
     * Description of the connection resource.
     */
    readonly description: string;
    /**
     * Slug of a facility to which the connection belongs.
     */
    readonly facility: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Slug of a metro to which the connection belongs.
     */
    readonly metro: string;
    /**
     * Mode for connections in IBX facilities with the dedicated type - standard or tunnel.
     */
    readonly mode: string;
    /**
     * Port name.
     */
    readonly name: string;
    /**
     * ID of the organization where the connection is scoped to.
     */
    readonly organizationId: string;
    /**
     * List of connection ports - primary (`ports[0]`) and secondary (`ports[1]`)
     */
    readonly ports: outputs.GetMetalConnectionPort[];
    /**
     * ID of project to which the connection belongs.
     */
    readonly projectId: string;
    /**
     * Connection redundancy, reduntant or primary.
     */
    readonly redundancy: string;
    /**
     * Type of service token, aSide or z_side. One available in shared connection.
     */
    readonly serviceTokenType: string;
    /**
     * List of connection service tokens with attributes
     */
    readonly serviceTokens: outputs.GetMetalConnectionServiceToken[];
    /**
     * Port speed in bits per second.
     */
    readonly speed: string;
    /**
     * Port status.
     */
    readonly status: string;
    /**
     * String list of tags.
     */
    readonly tags: string[];
    /**
     * (Deprecated) Token to configure the connection in the [Equinix Fabric Portal](https://ecxfabric.equinix.com/dashboard).
     */
    readonly token: string;
    /**
     * Token type, `aSide` or `zSide`.
     */
    readonly type: string;
    /**
     * Attached VLANs. Only available in shared connection. One vlan for Primary/Single connection and two vlans for Redundant connection.
     */
    readonly vlans: number[];
}

export function getMetalConnectionOutput(args: GetMetalConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalConnectionResult> {
    return pulumi.output(args).apply(a => getMetalConnection(a, opts))
}

/**
 * A collection of arguments for invoking GetMetalConnection.
 */
export interface GetMetalConnectionOutputArgs {
    /**
     * ID of the connection resource.
     */
    connectionId: pulumi.Input<string>;
}
