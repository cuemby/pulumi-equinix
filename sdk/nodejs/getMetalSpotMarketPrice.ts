// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get Equinix Metal Spot Market Price for a plan.
 *
 * ## Example Usage
 *
 * Lookup by facility:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@pulumi/equinix";
 *
 * const example = pulumi.output(equinix.GetMetalSpotMarketPrice({
 *     facility: "ny5",
 *     plan: "c3.small.x86",
 * }));
 * ```
 *
 * Lookup by metro:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@pulumi/equinix";
 *
 * const example = pulumi.output(equinix.GetMetalSpotMarketPrice({
 *     metro: "sv",
 *     plan: "c3.small.x86",
 * }));
 * ```
 */
export function getMetalSpotMarketPrice(args: GetMetalSpotMarketPriceArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalSpotMarketPriceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("equinix:index/getMetalSpotMarketPrice:GetMetalSpotMarketPrice", {
        "facility": args.facility,
        "metro": args.metro,
        "plan": args.plan,
    }, opts);
}

/**
 * A collection of arguments for invoking GetMetalSpotMarketPrice.
 */
export interface GetMetalSpotMarketPriceArgs {
    /**
     * Name of the facility.
     */
    facility?: string;
    /**
     * Name of the metro.
     */
    metro?: string;
    /**
     * Name of the plan.
     */
    plan: string;
}

/**
 * A collection of values returned by GetMetalSpotMarketPrice.
 */
export interface GetMetalSpotMarketPriceResult {
    readonly facility?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly metro?: string;
    readonly plan: string;
    /**
     * Current spot market price for given plan in given facility.
     */
    readonly price: number;
}

export function getMetalSpotMarketPriceOutput(args: GetMetalSpotMarketPriceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalSpotMarketPriceResult> {
    return pulumi.output(args).apply(a => getMetalSpotMarketPrice(a, opts))
}

/**
 * A collection of arguments for invoking GetMetalSpotMarketPrice.
 */
export interface GetMetalSpotMarketPriceOutputArgs {
    /**
     * Name of the facility.
     */
    facility?: pulumi.Input<string>;
    /**
     * Name of the metro.
     */
    metro?: pulumi.Input<string>;
    /**
     * Name of the plan.
     */
    plan: pulumi.Input<string>;
}
