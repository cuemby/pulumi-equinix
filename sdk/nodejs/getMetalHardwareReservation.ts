// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve a [hardware reservation resource from Equinix Metal](https://metal.equinix.com/developers/docs/deploy/reserved/).
 *
 * You can look up hardware reservation by its ID or by ID of device which occupies it.
 */
export function getMetalHardwareReservation(args?: GetMetalHardwareReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalHardwareReservationResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("equinix:index/getMetalHardwareReservation:GetMetalHardwareReservation", {
        "deviceId": args.deviceId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking GetMetalHardwareReservation.
 */
export interface GetMetalHardwareReservationArgs {
    /**
     * UUID of device occupying the reservation.
     */
    deviceId?: string;
    /**
     * ID of the hardware reservation.
     */
    id?: string;
}

/**
 * A collection of values returned by GetMetalHardwareReservation.
 */
export interface GetMetalHardwareReservationResult {
    /**
     * UUID of device occupying the reservation.
     */
    readonly deviceId: string;
    /**
     * Plan type for the reservation.
     */
    readonly facility: string;
    /**
     * ID of the hardware reservation to look up.
     */
    readonly id: string;
    /**
     * Plan type for the reservation.
     */
    readonly plan: string;
    /**
     * UUID of project this reservation is scoped to.
     */
    readonly projectId: string;
    /**
     * Flag indicating whether the reserved server is provisionable or not. Spare
     * devices can't be provisioned unless they are activated first.
     */
    readonly provisionable: boolean;
    /**
     * Reservation short ID.
     */
    readonly shortId: string;
    /**
     * Flag indicating whether the Hardware Reservation is a spare. Spare Hardware
     * Reservations are used when a Hardware Reservations requires service from Metal Equinix.
     */
    readonly spare: boolean;
    /**
     * Switch short ID, can be used to determine if two devices are connected to the
     * same switch.
     */
    readonly switchUuid: string;
}

export function getMetalHardwareReservationOutput(args?: GetMetalHardwareReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalHardwareReservationResult> {
    return pulumi.output(args).apply(a => getMetalHardwareReservation(a, opts))
}

/**
 * A collection of arguments for invoking GetMetalHardwareReservation.
 */
export interface GetMetalHardwareReservationOutputArgs {
    /**
     * UUID of device occupying the reservation.
     */
    deviceId?: pulumi.Input<string>;
    /**
     * ID of the hardware reservation.
     */
    id?: pulumi.Input<string>;
}
