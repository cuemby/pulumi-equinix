// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Resource `equinix.NetworkACLTemplate` allows creation and management of
 * Equinix Network Edge device Access Control List templates.
 *
 * Device ACL templates give possibility to define set of rules will allowed inbound
 * traffic. Templates can be assigned to the network devices.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@pulumi/equinix";
 *
 * // Creates ACL template and assigns it to the network device
 * const myacl = new equinix.NetworkACLTemplate("myacl", {
 *     description: "Test ACL template",
 *     inboundRules: [
 *         {
 *             dstPort: "any",
 *             protocol: "IP",
 *             srcPort: "any",
 *             subnet: "1.1.1.1/32",
 *         },
 *         {
 *             dstPort: "53,1045,2041",
 *             protocol: "UDP",
 *             srcPort: "any",
 *             subnet: "172.16.25.0/24",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using an existing ID
 *
 * ```sh
 *  $ pulumi import equinix:index/networkACLTemplate:NetworkACLTemplate example {existing_id}
 * ```
 */
export class NetworkACLTemplate extends pulumi.CustomResource {
    /**
     * Get an existing NetworkACLTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkACLTemplateState, opts?: pulumi.CustomResourceOptions): NetworkACLTemplate {
        return new NetworkACLTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'equinix:index/networkACLTemplate:NetworkACLTemplate';

    /**
     * Returns true if the given object is an instance of NetworkACLTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkACLTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkACLTemplate.__pulumiType;
    }

    /**
     * ACL template description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Status of ACL template provisioning process, where template was applied.
     * One of `PROVISIONING`, `PROVISIONED`.
     */
    public /*out*/ readonly deviceAclStatus!: pulumi.Output<string>;
    /**
     * List of the devices where the ACL template is applied.
     */
    public /*out*/ readonly deviceDetails!: pulumi.Output<outputs.NetworkACLTemplateDeviceDetail[]>;
    /**
     * (Deprecated) Identifier of a network device where template was applied.
     *
     * @deprecated Refer to device details get device information
     */
    public /*out*/ readonly deviceId!: pulumi.Output<string>;
    /**
     * One or more rules to specify allowed inbound traffic.
     * Rules are ordered, matching traffic rule stops processing subsequent ones.
     */
    public readonly inboundRules!: pulumi.Output<outputs.NetworkACLTemplateInboundRule[]>;
    /**
     * ACL template location metro code.
     *
     * @deprecated Metro Code is no longer required
     */
    public readonly metroCode!: pulumi.Output<string | undefined>;
    /**
     * ACL template name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Device uuid.
     */
    public /*out*/ readonly uuid!: pulumi.Output<string>;

    /**
     * Create a NetworkACLTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkACLTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkACLTemplateArgs | NetworkACLTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkACLTemplateState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceAclStatus"] = state ? state.deviceAclStatus : undefined;
            resourceInputs["deviceDetails"] = state ? state.deviceDetails : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["inboundRules"] = state ? state.inboundRules : undefined;
            resourceInputs["metroCode"] = state ? state.metroCode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as NetworkACLTemplateArgs | undefined;
            if ((!args || args.inboundRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inboundRules'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["inboundRules"] = args ? args.inboundRules : undefined;
            resourceInputs["metroCode"] = args ? args.metroCode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["deviceAclStatus"] = undefined /*out*/;
            resourceInputs["deviceDetails"] = undefined /*out*/;
            resourceInputs["deviceId"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkACLTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkACLTemplate resources.
 */
export interface NetworkACLTemplateState {
    /**
     * ACL template description.
     */
    description?: pulumi.Input<string>;
    /**
     * Status of ACL template provisioning process, where template was applied.
     * One of `PROVISIONING`, `PROVISIONED`.
     */
    deviceAclStatus?: pulumi.Input<string>;
    /**
     * List of the devices where the ACL template is applied.
     */
    deviceDetails?: pulumi.Input<pulumi.Input<inputs.NetworkACLTemplateDeviceDetail>[]>;
    /**
     * (Deprecated) Identifier of a network device where template was applied.
     *
     * @deprecated Refer to device details get device information
     */
    deviceId?: pulumi.Input<string>;
    /**
     * One or more rules to specify allowed inbound traffic.
     * Rules are ordered, matching traffic rule stops processing subsequent ones.
     */
    inboundRules?: pulumi.Input<pulumi.Input<inputs.NetworkACLTemplateInboundRule>[]>;
    /**
     * ACL template location metro code.
     *
     * @deprecated Metro Code is no longer required
     */
    metroCode?: pulumi.Input<string>;
    /**
     * ACL template name.
     */
    name?: pulumi.Input<string>;
    /**
     * Device uuid.
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkACLTemplate resource.
 */
export interface NetworkACLTemplateArgs {
    /**
     * ACL template description.
     */
    description?: pulumi.Input<string>;
    /**
     * One or more rules to specify allowed inbound traffic.
     * Rules are ordered, matching traffic rule stops processing subsequent ones.
     */
    inboundRules: pulumi.Input<pulumi.Input<inputs.NetworkACLTemplateInboundRule>[]>;
    /**
     * ACL template location metro code.
     *
     * @deprecated Metro Code is no longer required
     */
    metroCode?: pulumi.Input<string>;
    /**
     * ACL template name.
     */
    name?: pulumi.Input<string>;
}
