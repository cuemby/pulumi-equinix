// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to get details of Equinix Fabric layer 2 seller profile with a given name
 * and / or organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@pulumi/equinix";
 *
 * const aws = equinix.GetECXL2Sellerprofile({
 *     name: "AWS Direct Connect",
 * });
 * export const id = aws.then(aws => aws.id);
 * ```
 */
export function getECXL2Sellerprofile(args?: GetECXL2SellerprofileArgs, opts?: pulumi.InvokeOptions): Promise<GetECXL2SellerprofileResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("equinix:index/getECXL2Sellerprofile:GetECXL2Sellerprofile", {
        "name": args.name,
        "organizationGlobalName": args.organizationGlobalName,
        "organizationName": args.organizationName,
    }, opts);
}

/**
 * A collection of arguments for invoking GetECXL2Sellerprofile.
 */
export interface GetECXL2SellerprofileArgs {
    /**
     * Name of the seller profile.
     */
    name?: string;
    /**
     * Name of seller's global organization.
     */
    organizationGlobalName?: string;
    /**
     * Name of seller's organization.
     */
    organizationName?: string;
}

/**
 * A collection of values returned by GetECXL2Sellerprofile.
 */
export interface GetECXL2SellerprofileResult {
    /**
     * One or more specifications of additional buyer information attributes that
     * can be provided in connection definition that uses given seller profile.
     * See Additional Info Attribute below for more details.
     */
    readonly additionalInfos: outputs.GetECXL2SellerprofileAdditionalInfo[];
    /**
     * Textual description of additional information attribute.
     */
    readonly description: string;
    /**
     * Seller profile's encapsulation (either Dot1q or QinQ).
     */
    readonly encapsulation: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * One or more specifications of metro locations supported by seller profile.
     * See Metro Attribute below for more details.
     */
    readonly metros: outputs.GetECXL2SellerprofileMetro[];
    /**
     * Name of additional information attribute.
     */
    readonly name: string;
    readonly organizationGlobalName: string;
    readonly organizationName: string;
    /**
     * Boolean that indicate if seller requires connections to be redundant
     */
    readonly redundancyRequired: boolean;
    /**
     * One or more specifications of speed/bandwidth supported by given seller profile.
     * See Speed Band Attribute below for more details.
     */
    readonly speedBands: outputs.GetECXL2SellerprofileSpeedBand[];
    /**
     * Boolean that indicates if seller allows customer to enter a
     * custom connection speed.
     */
    readonly speedCustomizationAllowed: boolean;
    /**
     * Boolean that indicates if seller is deriving connection speed from an API call.
     */
    readonly speedFromApi: boolean;
    /**
     * Unique identifier of the seller profile.
     */
    readonly uuid: string;
}

export function getECXL2SellerprofileOutput(args?: GetECXL2SellerprofileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetECXL2SellerprofileResult> {
    return pulumi.output(args).apply(a => getECXL2Sellerprofile(a, opts))
}

/**
 * A collection of arguments for invoking GetECXL2Sellerprofile.
 */
export interface GetECXL2SellerprofileOutputArgs {
    /**
     * Name of the seller profile.
     */
    name?: pulumi.Input<string>;
    /**
     * Name of seller's global organization.
     */
    organizationGlobalName?: pulumi.Input<string>;
    /**
     * Name of seller's organization.
     */
    organizationName?: pulumi.Input<string>;
}
