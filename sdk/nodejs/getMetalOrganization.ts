// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides an Equinix Metal organization datasource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@pulumi/equinix";
 *
 * const test = equinix.GetMetalOrganization({
 *     organizationId: local.org_id,
 * });
 * export const projectsInTheOrg = test.then(test => test.projectIds);
 * ```
 */
export function getMetalOrganization(args?: GetMetalOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalOrganizationResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("equinix:index/getMetalOrganization:GetMetalOrganization", {
        "addresses": args.addresses,
        "name": args.name,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking GetMetalOrganization.
 */
export interface GetMetalOrganizationArgs {
    /**
     * Postal address.
     */
    addresses?: inputs.GetMetalOrganizationAddress[];
    /**
     * The organization name.
     */
    name?: string;
    /**
     * The UUID of the organization resource.
     */
    organizationId?: string;
}

/**
 * A collection of values returned by GetMetalOrganization.
 */
export interface GetMetalOrganizationResult {
    /**
     * Postal address.
     */
    readonly addresses: outputs.GetMetalOrganizationAddress[];
    /**
     * Description string.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Logo URL.
     */
    readonly logo: string;
    readonly name: string;
    readonly organizationId: string;
    /**
     * UUIDs of project resources which belong to this organization.
     */
    readonly projectIds: string[];
    /**
     * Twitter handle.
     */
    readonly twitter: string;
    /**
     * Website link.
     */
    readonly website: string;
}

export function getMetalOrganizationOutput(args?: GetMetalOrganizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalOrganizationResult> {
    return pulumi.output(args).apply(a => getMetalOrganization(a, opts))
}

/**
 * A collection of arguments for invoking GetMetalOrganization.
 */
export interface GetMetalOrganizationOutputArgs {
    /**
     * Postal address.
     */
    addresses?: pulumi.Input<pulumi.Input<inputs.GetMetalOrganizationAddressArgs>[]>;
    /**
     * The organization name.
     */
    name?: pulumi.Input<string>;
    /**
     * The UUID of the organization resource.
     */
    organizationId?: pulumi.Input<string>;
}
