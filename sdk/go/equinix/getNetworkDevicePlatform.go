// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get Equinix Network Edge device platform configuration details
// for a given device type. For further details, check supported
// [Network Edge Vendors and Devices](https://docs.equinix.com/en-us/Content/Interconnection/NE/user-guide/NE-vendors-devices.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/cuemby/pulumi-equinix/sdk/go/equinix"
// 	"github.com/pulumi/pulumi-equinix/sdk/go/equinix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := equinix.GetNetworkDevicePlatform(ctx, &GetNetworkDevicePlatformArgs{
// 			DeviceType: "CSR1000V",
// 			Flavor:     pulumi.StringRef("large"),
// 			Packages: []string{
// 				"IPBASE",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetNetworkDevicePlatform(ctx *pulumi.Context, args *GetNetworkDevicePlatformArgs, opts ...pulumi.InvokeOption) (*GetNetworkDevicePlatformResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetNetworkDevicePlatformResult
	err := ctx.Invoke("equinix:index/getNetworkDevicePlatform:GetNetworkDevicePlatform", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNetworkDevicePlatform.
type GetNetworkDevicePlatformArgs struct {
	// Number of CPU cores used to limit platform search results.
	CoreCount *int `pulumi:"coreCount"`
	// Device type code
	DeviceType string `pulumi:"deviceType"`
	// Device platform flavor that determines number of CPU cores and memory.
	// Supported values are: `small`, `medium`, `large`, `xlarge`.
	Flavor *string `pulumi:"flavor"`
	// List of device licensing options to limit platform search result.
	// Supported values are: `BYOL` (for Bring Your Own License), `Sub` (for license subscription).
	LicenseOptions []string `pulumi:"licenseOptions"`
	// List of device management types to limit platform search results.
	// Supported values are: `EQUINIX-CONFIGURED`, `SELF-CONFIGURED`.
	ManagementTypes []string `pulumi:"managementTypes"`
	// List of software package codes to limit platform search results.
	Packages []string `pulumi:"packages"`
}

// A collection of values returned by GetNetworkDevicePlatform.
type GetNetworkDevicePlatformResult struct {
	CoreCount  int    `pulumi:"coreCount"`
	DeviceType string `pulumi:"deviceType"`
	Flavor     string `pulumi:"flavor"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	LicenseOptions  []string `pulumi:"licenseOptions"`
	ManagementTypes []string `pulumi:"managementTypes"`
	// The amount of memory provided by device platform.
	Memory int `pulumi:"memory"`
	// Unit of memory provider by device platform.
	MemoryUnit string   `pulumi:"memoryUnit"`
	Packages   []string `pulumi:"packages"`
}

func GetNetworkDevicePlatformOutput(ctx *pulumi.Context, args GetNetworkDevicePlatformOutputArgs, opts ...pulumi.InvokeOption) GetNetworkDevicePlatformResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworkDevicePlatformResult, error) {
			args := v.(GetNetworkDevicePlatformArgs)
			r, err := GetNetworkDevicePlatform(ctx, &args, opts...)
			var s GetNetworkDevicePlatformResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetworkDevicePlatformResultOutput)
}

// A collection of arguments for invoking GetNetworkDevicePlatform.
type GetNetworkDevicePlatformOutputArgs struct {
	// Number of CPU cores used to limit platform search results.
	CoreCount pulumi.IntPtrInput `pulumi:"coreCount"`
	// Device type code
	DeviceType pulumi.StringInput `pulumi:"deviceType"`
	// Device platform flavor that determines number of CPU cores and memory.
	// Supported values are: `small`, `medium`, `large`, `xlarge`.
	Flavor pulumi.StringPtrInput `pulumi:"flavor"`
	// List of device licensing options to limit platform search result.
	// Supported values are: `BYOL` (for Bring Your Own License), `Sub` (for license subscription).
	LicenseOptions pulumi.StringArrayInput `pulumi:"licenseOptions"`
	// List of device management types to limit platform search results.
	// Supported values are: `EQUINIX-CONFIGURED`, `SELF-CONFIGURED`.
	ManagementTypes pulumi.StringArrayInput `pulumi:"managementTypes"`
	// List of software package codes to limit platform search results.
	Packages pulumi.StringArrayInput `pulumi:"packages"`
}

func (GetNetworkDevicePlatformOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDevicePlatformArgs)(nil)).Elem()
}

// A collection of values returned by GetNetworkDevicePlatform.
type GetNetworkDevicePlatformResultOutput struct{ *pulumi.OutputState }

func (GetNetworkDevicePlatformResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDevicePlatformResult)(nil)).Elem()
}

func (o GetNetworkDevicePlatformResultOutput) ToGetNetworkDevicePlatformResultOutput() GetNetworkDevicePlatformResultOutput {
	return o
}

func (o GetNetworkDevicePlatformResultOutput) ToGetNetworkDevicePlatformResultOutputWithContext(ctx context.Context) GetNetworkDevicePlatformResultOutput {
	return o
}

func (o GetNetworkDevicePlatformResultOutput) CoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) int { return v.CoreCount }).(pulumi.IntOutput)
}

func (o GetNetworkDevicePlatformResultOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) string { return v.DeviceType }).(pulumi.StringOutput)
}

func (o GetNetworkDevicePlatformResultOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) string { return v.Flavor }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkDevicePlatformResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNetworkDevicePlatformResultOutput) LicenseOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) []string { return v.LicenseOptions }).(pulumi.StringArrayOutput)
}

func (o GetNetworkDevicePlatformResultOutput) ManagementTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) []string { return v.ManagementTypes }).(pulumi.StringArrayOutput)
}

// The amount of memory provided by device platform.
func (o GetNetworkDevicePlatformResultOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) int { return v.Memory }).(pulumi.IntOutput)
}

// Unit of memory provider by device platform.
func (o GetNetworkDevicePlatformResultOutput) MemoryUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) string { return v.MemoryUnit }).(pulumi.StringOutput)
}

func (o GetNetworkDevicePlatformResultOutput) Packages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkDevicePlatformResult) []string { return v.Packages }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkDevicePlatformResultOutput{})
}
