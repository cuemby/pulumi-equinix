// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get Equinix Network Edge device software details for a given
// device type. For further details, check supported
// [Network Edge Vendors and Devices](https://docs.equinix.com/en-us/Content/Interconnection/NE/user-guide/NE-vendors-devices.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/cuemby/pulumi-equinix/sdk/go/equinix"
// 	"github.com/pulumi/pulumi-equinix/sdk/go/equinix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := equinix.GetNetworkDeviceSoftware(ctx, &GetNetworkDeviceSoftwareArgs{
// 			DeviceType: "CSR1000V",
// 			MostRecent: pulumi.BoolRef(true),
// 			Packages: []string{
// 				"IPBASE",
// 			},
// 			VersionRegex: pulumi.StringRef("^16.09.+"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetNetworkDeviceSoftware(ctx *pulumi.Context, args *GetNetworkDeviceSoftwareArgs, opts ...pulumi.InvokeOption) (*GetNetworkDeviceSoftwareResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetNetworkDeviceSoftwareResult
	err := ctx.Invoke("equinix:index/getNetworkDeviceSoftware:GetNetworkDeviceSoftware", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetNetworkDeviceSoftware.
type GetNetworkDeviceSoftwareArgs struct {
	// Code of a device type.
	DeviceType string `pulumi:"deviceType"`
	// Boolean value to indicate that most recent version should be used *(in
	// case when more than one result is returned)*.
	MostRecent *bool `pulumi:"mostRecent"`
	// Limits returned versions to those that are supported by given software
	// package codes.
	Packages []string `pulumi:"packages"`
	// Boolean value to limit query results to stable versions only.
	Stable *bool `pulumi:"stable"`
	// A regex string to apply on returned versions and filter search
	// results.
	VersionRegex *string `pulumi:"versionRegex"`
}

// A collection of values returned by GetNetworkDeviceSoftware.
type GetNetworkDeviceSoftwareResult struct {
	// Version release date.
	Date       string `pulumi:"date"`
	DeviceType string `pulumi:"deviceType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Software image name.
	ImageName  string   `pulumi:"imageName"`
	MostRecent *bool    `pulumi:"mostRecent"`
	Packages   []string `pulumi:"packages"`
	// Link to version release notes.
	ReleaseNotesLink string `pulumi:"releaseNotesLink"`
	Stable           bool   `pulumi:"stable"`
	// Version status.
	Status string `pulumi:"status"`
	// Version number.
	Version      string  `pulumi:"version"`
	VersionRegex *string `pulumi:"versionRegex"`
}

func GetNetworkDeviceSoftwareOutput(ctx *pulumi.Context, args GetNetworkDeviceSoftwareOutputArgs, opts ...pulumi.InvokeOption) GetNetworkDeviceSoftwareResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworkDeviceSoftwareResult, error) {
			args := v.(GetNetworkDeviceSoftwareArgs)
			r, err := GetNetworkDeviceSoftware(ctx, &args, opts...)
			var s GetNetworkDeviceSoftwareResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetworkDeviceSoftwareResultOutput)
}

// A collection of arguments for invoking GetNetworkDeviceSoftware.
type GetNetworkDeviceSoftwareOutputArgs struct {
	// Code of a device type.
	DeviceType pulumi.StringInput `pulumi:"deviceType"`
	// Boolean value to indicate that most recent version should be used *(in
	// case when more than one result is returned)*.
	MostRecent pulumi.BoolPtrInput `pulumi:"mostRecent"`
	// Limits returned versions to those that are supported by given software
	// package codes.
	Packages pulumi.StringArrayInput `pulumi:"packages"`
	// Boolean value to limit query results to stable versions only.
	Stable pulumi.BoolPtrInput `pulumi:"stable"`
	// A regex string to apply on returned versions and filter search
	// results.
	VersionRegex pulumi.StringPtrInput `pulumi:"versionRegex"`
}

func (GetNetworkDeviceSoftwareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDeviceSoftwareArgs)(nil)).Elem()
}

// A collection of values returned by GetNetworkDeviceSoftware.
type GetNetworkDeviceSoftwareResultOutput struct{ *pulumi.OutputState }

func (GetNetworkDeviceSoftwareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDeviceSoftwareResult)(nil)).Elem()
}

func (o GetNetworkDeviceSoftwareResultOutput) ToGetNetworkDeviceSoftwareResultOutput() GetNetworkDeviceSoftwareResultOutput {
	return o
}

func (o GetNetworkDeviceSoftwareResultOutput) ToGetNetworkDeviceSoftwareResultOutputWithContext(ctx context.Context) GetNetworkDeviceSoftwareResultOutput {
	return o
}

// Version release date.
func (o GetNetworkDeviceSoftwareResultOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) string { return v.Date }).(pulumi.StringOutput)
}

func (o GetNetworkDeviceSoftwareResultOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) string { return v.DeviceType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkDeviceSoftwareResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) string { return v.Id }).(pulumi.StringOutput)
}

// Software image name.
func (o GetNetworkDeviceSoftwareResultOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o GetNetworkDeviceSoftwareResultOutput) MostRecent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) *bool { return v.MostRecent }).(pulumi.BoolPtrOutput)
}

func (o GetNetworkDeviceSoftwareResultOutput) Packages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) []string { return v.Packages }).(pulumi.StringArrayOutput)
}

// Link to version release notes.
func (o GetNetworkDeviceSoftwareResultOutput) ReleaseNotesLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) string { return v.ReleaseNotesLink }).(pulumi.StringOutput)
}

func (o GetNetworkDeviceSoftwareResultOutput) Stable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) bool { return v.Stable }).(pulumi.BoolOutput)
}

// Version status.
func (o GetNetworkDeviceSoftwareResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) string { return v.Status }).(pulumi.StringOutput)
}

// Version number.
func (o GetNetworkDeviceSoftwareResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) string { return v.Version }).(pulumi.StringOutput)
}

func (o GetNetworkDeviceSoftwareResultOutput) VersionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkDeviceSoftwareResult) *string { return v.VersionRegex }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkDeviceSoftwareResultOutput{})
}
