// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get Equinix Metal Operating System image.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-equinix/sdk/go/equinix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := equinix.GetMetalOperatingSystem(ctx, &GetMetalOperatingSystemArgs{
// 			Distro:          pulumi.StringRef("ubuntu"),
// 			Version:         pulumi.StringRef("20.04"),
// 			ProvisionableOn: pulumi.StringRef("c3.medium.x86"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = equinix.NewMetalDevice(ctx, "server", &equinix.MetalDeviceArgs{
// 			Hostname: pulumi.String("tf.ubuntu"),
// 			Plan:     pulumi.String("c3.medium.x86"),
// 			Facilities: pulumi.StringArray{
// 				pulumi.String("ny5"),
// 			},
// 			OperatingSystem: pulumi.String(example.Id),
// 			BillingCycle:    pulumi.String("hourly"),
// 			ProjectId:       pulumi.Any(local.Project_id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetMetalOperatingSystem(ctx *pulumi.Context, args *GetMetalOperatingSystemArgs, opts ...pulumi.InvokeOption) (*GetMetalOperatingSystemResult, error) {
	var rv GetMetalOperatingSystemResult
	err := ctx.Invoke("equinix:index/getMetalOperatingSystem:GetMetalOperatingSystem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetMetalOperatingSystem.
type GetMetalOperatingSystemArgs struct {
	// Name of the OS distribution.
	Distro *string `pulumi:"distro"`
	// Name or part of the name of the distribution. Case insensitive.
	Name *string `pulumi:"name"`
	// Plan name.
	ProvisionableOn *string `pulumi:"provisionableOn"`
	// Version of the distribution.
	Version *string `pulumi:"version"`
}

// A collection of values returned by GetMetalOperatingSystem.
type GetMetalOperatingSystemResult struct {
	Distro *string `pulumi:"distro"`
	// The provider-assigned unique ID for this managed resource.
	Id              string  `pulumi:"id"`
	Name            *string `pulumi:"name"`
	ProvisionableOn *string `pulumi:"provisionableOn"`
	// Operating system slug (same as `id`).
	Slug    string  `pulumi:"slug"`
	Version *string `pulumi:"version"`
}

func GetMetalOperatingSystemOutput(ctx *pulumi.Context, args GetMetalOperatingSystemOutputArgs, opts ...pulumi.InvokeOption) GetMetalOperatingSystemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMetalOperatingSystemResult, error) {
			args := v.(GetMetalOperatingSystemArgs)
			r, err := GetMetalOperatingSystem(ctx, &args, opts...)
			var s GetMetalOperatingSystemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMetalOperatingSystemResultOutput)
}

// A collection of arguments for invoking GetMetalOperatingSystem.
type GetMetalOperatingSystemOutputArgs struct {
	// Name of the OS distribution.
	Distro pulumi.StringPtrInput `pulumi:"distro"`
	// Name or part of the name of the distribution. Case insensitive.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Plan name.
	ProvisionableOn pulumi.StringPtrInput `pulumi:"provisionableOn"`
	// Version of the distribution.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetMetalOperatingSystemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetalOperatingSystemArgs)(nil)).Elem()
}

// A collection of values returned by GetMetalOperatingSystem.
type GetMetalOperatingSystemResultOutput struct{ *pulumi.OutputState }

func (GetMetalOperatingSystemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetalOperatingSystemResult)(nil)).Elem()
}

func (o GetMetalOperatingSystemResultOutput) ToGetMetalOperatingSystemResultOutput() GetMetalOperatingSystemResultOutput {
	return o
}

func (o GetMetalOperatingSystemResultOutput) ToGetMetalOperatingSystemResultOutputWithContext(ctx context.Context) GetMetalOperatingSystemResultOutput {
	return o
}

func (o GetMetalOperatingSystemResultOutput) Distro() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetalOperatingSystemResult) *string { return v.Distro }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMetalOperatingSystemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetalOperatingSystemResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMetalOperatingSystemResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetalOperatingSystemResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetMetalOperatingSystemResultOutput) ProvisionableOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetalOperatingSystemResult) *string { return v.ProvisionableOn }).(pulumi.StringPtrOutput)
}

// Operating system slug (same as `id`).
func (o GetMetalOperatingSystemResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetalOperatingSystemResult) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetMetalOperatingSystemResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetalOperatingSystemResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetalOperatingSystemResultOutput{})
}
