// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Equinix Metal metro datasource.
func GetMetalMetro(ctx *pulumi.Context, args *GetMetalMetroArgs, opts ...pulumi.InvokeOption) (*GetMetalMetroResult, error) {
	var rv GetMetalMetroResult
	err := ctx.Invoke("equinix:index/getMetalMetro:GetMetalMetro", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetMetalMetro.
type GetMetalMetroArgs struct {
	// One or more device plans for which the facility must have capacity.
	Capacities []GetMetalMetroCapacity `pulumi:"capacities"`
	// The facility code to search for facilities.
	Code string `pulumi:"code"`
}

// A collection of values returned by GetMetalMetro.
type GetMetalMetroResult struct {
	Capacities []GetMetalMetroCapacity `pulumi:"capacities"`
	Code       string                  `pulumi:"code"`
	// The country of the metro.
	Country string `pulumi:"country"`
	// The ID of the metro.
	Id string `pulumi:"id"`
	// The name of the metro.
	Name string `pulumi:"name"`
}

func GetMetalMetroOutput(ctx *pulumi.Context, args GetMetalMetroOutputArgs, opts ...pulumi.InvokeOption) GetMetalMetroResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMetalMetroResult, error) {
			args := v.(GetMetalMetroArgs)
			r, err := GetMetalMetro(ctx, &args, opts...)
			var s GetMetalMetroResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMetalMetroResultOutput)
}

// A collection of arguments for invoking GetMetalMetro.
type GetMetalMetroOutputArgs struct {
	// One or more device plans for which the facility must have capacity.
	Capacities GetMetalMetroCapacityArrayInput `pulumi:"capacities"`
	// The facility code to search for facilities.
	Code pulumi.StringInput `pulumi:"code"`
}

func (GetMetalMetroOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetalMetroArgs)(nil)).Elem()
}

// A collection of values returned by GetMetalMetro.
type GetMetalMetroResultOutput struct{ *pulumi.OutputState }

func (GetMetalMetroResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetalMetroResult)(nil)).Elem()
}

func (o GetMetalMetroResultOutput) ToGetMetalMetroResultOutput() GetMetalMetroResultOutput {
	return o
}

func (o GetMetalMetroResultOutput) ToGetMetalMetroResultOutputWithContext(ctx context.Context) GetMetalMetroResultOutput {
	return o
}

func (o GetMetalMetroResultOutput) Capacities() GetMetalMetroCapacityArrayOutput {
	return o.ApplyT(func(v GetMetalMetroResult) []GetMetalMetroCapacity { return v.Capacities }).(GetMetalMetroCapacityArrayOutput)
}

func (o GetMetalMetroResultOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetalMetroResult) string { return v.Code }).(pulumi.StringOutput)
}

// The country of the metro.
func (o GetMetalMetroResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetalMetroResult) string { return v.Country }).(pulumi.StringOutput)
}

// The ID of the metro.
func (o GetMetalMetroResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetalMetroResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the metro.
func (o GetMetalMetroResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetalMetroResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetalMetroResultOutput{})
}
