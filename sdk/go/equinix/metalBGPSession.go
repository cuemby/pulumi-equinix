// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage BGP sessions in Equinix Metal Host. Refer to [Equinix Metal BGP documentation](https://metal.equinix.com/developers/docs/networking/local-global-bgp/) for more details.
//
// You need to have BGP config enabled in your project.
//
// BGP session must be linked to a device running [BIRD](https://bird.network.cz) or other BGP routing daemon which will control route advertisements via the session to Equinix Metal's upstream routers.
type MetalBGPSession struct {
	pulumi.CustomResourceState

	// `ipv4` or `ipv6`.
	AddressFamily pulumi.StringOutput `pulumi:"addressFamily"`
	// Boolean flag to set the default route policy. False by default.
	DefaultRoute pulumi.BoolPtrOutput `pulumi:"defaultRoute"`
	// ID of device.
	DeviceId pulumi.StringOutput `pulumi:"deviceId"`
	// Status of the session - up or down
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewMetalBGPSession registers a new resource with the given unique name, arguments, and options.
func NewMetalBGPSession(ctx *pulumi.Context,
	name string, args *MetalBGPSessionArgs, opts ...pulumi.ResourceOption) (*MetalBGPSession, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressFamily == nil {
		return nil, errors.New("invalid value for required argument 'AddressFamily'")
	}
	if args.DeviceId == nil {
		return nil, errors.New("invalid value for required argument 'DeviceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource MetalBGPSession
	err := ctx.RegisterResource("equinix:index/metalBGPSession:MetalBGPSession", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMetalBGPSession gets an existing MetalBGPSession resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMetalBGPSession(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MetalBGPSessionState, opts ...pulumi.ResourceOption) (*MetalBGPSession, error) {
	var resource MetalBGPSession
	err := ctx.ReadResource("equinix:index/metalBGPSession:MetalBGPSession", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MetalBGPSession resources.
type metalBGPSessionState struct {
	// `ipv4` or `ipv6`.
	AddressFamily *string `pulumi:"addressFamily"`
	// Boolean flag to set the default route policy. False by default.
	DefaultRoute *bool `pulumi:"defaultRoute"`
	// ID of device.
	DeviceId *string `pulumi:"deviceId"`
	// Status of the session - up or down
	Status *string `pulumi:"status"`
}

type MetalBGPSessionState struct {
	// `ipv4` or `ipv6`.
	AddressFamily pulumi.StringPtrInput
	// Boolean flag to set the default route policy. False by default.
	DefaultRoute pulumi.BoolPtrInput
	// ID of device.
	DeviceId pulumi.StringPtrInput
	// Status of the session - up or down
	Status pulumi.StringPtrInput
}

func (MetalBGPSessionState) ElementType() reflect.Type {
	return reflect.TypeOf((*metalBGPSessionState)(nil)).Elem()
}

type metalBGPSessionArgs struct {
	// `ipv4` or `ipv6`.
	AddressFamily string `pulumi:"addressFamily"`
	// Boolean flag to set the default route policy. False by default.
	DefaultRoute *bool `pulumi:"defaultRoute"`
	// ID of device.
	DeviceId string `pulumi:"deviceId"`
}

// The set of arguments for constructing a MetalBGPSession resource.
type MetalBGPSessionArgs struct {
	// `ipv4` or `ipv6`.
	AddressFamily pulumi.StringInput
	// Boolean flag to set the default route policy. False by default.
	DefaultRoute pulumi.BoolPtrInput
	// ID of device.
	DeviceId pulumi.StringInput
}

func (MetalBGPSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*metalBGPSessionArgs)(nil)).Elem()
}

type MetalBGPSessionInput interface {
	pulumi.Input

	ToMetalBGPSessionOutput() MetalBGPSessionOutput
	ToMetalBGPSessionOutputWithContext(ctx context.Context) MetalBGPSessionOutput
}

func (*MetalBGPSession) ElementType() reflect.Type {
	return reflect.TypeOf((**MetalBGPSession)(nil)).Elem()
}

func (i *MetalBGPSession) ToMetalBGPSessionOutput() MetalBGPSessionOutput {
	return i.ToMetalBGPSessionOutputWithContext(context.Background())
}

func (i *MetalBGPSession) ToMetalBGPSessionOutputWithContext(ctx context.Context) MetalBGPSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetalBGPSessionOutput)
}

// MetalBGPSessionArrayInput is an input type that accepts MetalBGPSessionArray and MetalBGPSessionArrayOutput values.
// You can construct a concrete instance of `MetalBGPSessionArrayInput` via:
//
//          MetalBGPSessionArray{ MetalBGPSessionArgs{...} }
type MetalBGPSessionArrayInput interface {
	pulumi.Input

	ToMetalBGPSessionArrayOutput() MetalBGPSessionArrayOutput
	ToMetalBGPSessionArrayOutputWithContext(context.Context) MetalBGPSessionArrayOutput
}

type MetalBGPSessionArray []MetalBGPSessionInput

func (MetalBGPSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MetalBGPSession)(nil)).Elem()
}

func (i MetalBGPSessionArray) ToMetalBGPSessionArrayOutput() MetalBGPSessionArrayOutput {
	return i.ToMetalBGPSessionArrayOutputWithContext(context.Background())
}

func (i MetalBGPSessionArray) ToMetalBGPSessionArrayOutputWithContext(ctx context.Context) MetalBGPSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetalBGPSessionArrayOutput)
}

// MetalBGPSessionMapInput is an input type that accepts MetalBGPSessionMap and MetalBGPSessionMapOutput values.
// You can construct a concrete instance of `MetalBGPSessionMapInput` via:
//
//          MetalBGPSessionMap{ "key": MetalBGPSessionArgs{...} }
type MetalBGPSessionMapInput interface {
	pulumi.Input

	ToMetalBGPSessionMapOutput() MetalBGPSessionMapOutput
	ToMetalBGPSessionMapOutputWithContext(context.Context) MetalBGPSessionMapOutput
}

type MetalBGPSessionMap map[string]MetalBGPSessionInput

func (MetalBGPSessionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MetalBGPSession)(nil)).Elem()
}

func (i MetalBGPSessionMap) ToMetalBGPSessionMapOutput() MetalBGPSessionMapOutput {
	return i.ToMetalBGPSessionMapOutputWithContext(context.Background())
}

func (i MetalBGPSessionMap) ToMetalBGPSessionMapOutputWithContext(ctx context.Context) MetalBGPSessionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetalBGPSessionMapOutput)
}

type MetalBGPSessionOutput struct{ *pulumi.OutputState }

func (MetalBGPSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetalBGPSession)(nil)).Elem()
}

func (o MetalBGPSessionOutput) ToMetalBGPSessionOutput() MetalBGPSessionOutput {
	return o
}

func (o MetalBGPSessionOutput) ToMetalBGPSessionOutputWithContext(ctx context.Context) MetalBGPSessionOutput {
	return o
}

// `ipv4` or `ipv6`.
func (o MetalBGPSessionOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *MetalBGPSession) pulumi.StringOutput { return v.AddressFamily }).(pulumi.StringOutput)
}

// Boolean flag to set the default route policy. False by default.
func (o MetalBGPSessionOutput) DefaultRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MetalBGPSession) pulumi.BoolPtrOutput { return v.DefaultRoute }).(pulumi.BoolPtrOutput)
}

// ID of device.
func (o MetalBGPSessionOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v *MetalBGPSession) pulumi.StringOutput { return v.DeviceId }).(pulumi.StringOutput)
}

// Status of the session - up or down
func (o MetalBGPSessionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MetalBGPSession) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type MetalBGPSessionArrayOutput struct{ *pulumi.OutputState }

func (MetalBGPSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MetalBGPSession)(nil)).Elem()
}

func (o MetalBGPSessionArrayOutput) ToMetalBGPSessionArrayOutput() MetalBGPSessionArrayOutput {
	return o
}

func (o MetalBGPSessionArrayOutput) ToMetalBGPSessionArrayOutputWithContext(ctx context.Context) MetalBGPSessionArrayOutput {
	return o
}

func (o MetalBGPSessionArrayOutput) Index(i pulumi.IntInput) MetalBGPSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MetalBGPSession {
		return vs[0].([]*MetalBGPSession)[vs[1].(int)]
	}).(MetalBGPSessionOutput)
}

type MetalBGPSessionMapOutput struct{ *pulumi.OutputState }

func (MetalBGPSessionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MetalBGPSession)(nil)).Elem()
}

func (o MetalBGPSessionMapOutput) ToMetalBGPSessionMapOutput() MetalBGPSessionMapOutput {
	return o
}

func (o MetalBGPSessionMapOutput) ToMetalBGPSessionMapOutputWithContext(ctx context.Context) MetalBGPSessionMapOutput {
	return o
}

func (o MetalBGPSessionMapOutput) MapIndex(k pulumi.StringInput) MetalBGPSessionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MetalBGPSession {
		return vs[0].(map[string]*MetalBGPSession)[vs[1].(string)]
	}).(MetalBGPSessionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MetalBGPSessionInput)(nil)).Elem(), &MetalBGPSession{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetalBGPSessionArrayInput)(nil)).Elem(), MetalBGPSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetalBGPSessionMapInput)(nil)).Elem(), MetalBGPSessionMap{})
	pulumi.RegisterOutputType(MetalBGPSessionOutput{})
	pulumi.RegisterOutputType(MetalBGPSessionArrayOutput{})
	pulumi.RegisterOutputType(MetalBGPSessionMapOutput{})
}
