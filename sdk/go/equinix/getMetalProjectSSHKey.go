// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this datasource to retrieve attributes of a Project SSH Key API resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-equinix/sdk/go/equinix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := equinix.GetMetalProjectSSHKey(ctx, &GetMetalProjectSSHKeyArgs{
// 			Search:    pulumi.StringRef("username@hostname"),
// 			ProjectId: local.Project_id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupMetalProjectSSHKey(ctx *pulumi.Context, args *LookupMetalProjectSSHKeyArgs, opts ...pulumi.InvokeOption) (*LookupMetalProjectSSHKeyResult, error) {
	var rv LookupMetalProjectSSHKeyResult
	err := ctx.Invoke("equinix:index/getMetalProjectSSHKey:GetMetalProjectSSHKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetMetalProjectSSHKey.
type LookupMetalProjectSSHKeyArgs struct {
	// The id of the SSH Key to search for in the Equinix Metal project.
	Id *string `pulumi:"id"`
	// The Equinix Metal project id of the Equinix Metal SSH Key.
	ProjectId string `pulumi:"projectId"`
	// The name, fingerprint, or publicKey of the SSH Key to search for
	// in the Equinix Metal project.
	Search *string `pulumi:"search"`
}

// A collection of values returned by GetMetalProjectSSHKey.
type LookupMetalProjectSSHKeyResult struct {
	// The timestamp for when the SSH key was created.
	Created string `pulumi:"created"`
	// The fingerprint of the SSH key.
	Fingerprint string `pulumi:"fingerprint"`
	// The unique ID of the key.
	Id string `pulumi:"id"`
	// The name of the SSH key.
	Name string `pulumi:"name"`
	// The ID of parent project (same as project_id).
	OwnerId string `pulumi:"ownerId"`
	// The ID of parent project.
	ProjectId string `pulumi:"projectId"`
	// The text of the public key.
	PublicKey string  `pulumi:"publicKey"`
	Search    *string `pulumi:"search"`
	// The timestamp for the last time the SSH key was updated.
	Updated string `pulumi:"updated"`
}

func LookupMetalProjectSSHKeyOutput(ctx *pulumi.Context, args LookupMetalProjectSSHKeyOutputArgs, opts ...pulumi.InvokeOption) LookupMetalProjectSSHKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMetalProjectSSHKeyResult, error) {
			args := v.(LookupMetalProjectSSHKeyArgs)
			r, err := LookupMetalProjectSSHKey(ctx, &args, opts...)
			var s LookupMetalProjectSSHKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMetalProjectSSHKeyResultOutput)
}

// A collection of arguments for invoking GetMetalProjectSSHKey.
type LookupMetalProjectSSHKeyOutputArgs struct {
	// The id of the SSH Key to search for in the Equinix Metal project.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Equinix Metal project id of the Equinix Metal SSH Key.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The name, fingerprint, or publicKey of the SSH Key to search for
	// in the Equinix Metal project.
	Search pulumi.StringPtrInput `pulumi:"search"`
}

func (LookupMetalProjectSSHKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetalProjectSSHKeyArgs)(nil)).Elem()
}

// A collection of values returned by GetMetalProjectSSHKey.
type LookupMetalProjectSSHKeyResultOutput struct{ *pulumi.OutputState }

func (LookupMetalProjectSSHKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetalProjectSSHKeyResult)(nil)).Elem()
}

func (o LookupMetalProjectSSHKeyResultOutput) ToLookupMetalProjectSSHKeyResultOutput() LookupMetalProjectSSHKeyResultOutput {
	return o
}

func (o LookupMetalProjectSSHKeyResultOutput) ToLookupMetalProjectSSHKeyResultOutputWithContext(ctx context.Context) LookupMetalProjectSSHKeyResultOutput {
	return o
}

// The timestamp for when the SSH key was created.
func (o LookupMetalProjectSSHKeyResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) string { return v.Created }).(pulumi.StringOutput)
}

// The fingerprint of the SSH key.
func (o LookupMetalProjectSSHKeyResultOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The unique ID of the key.
func (o LookupMetalProjectSSHKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the SSH key.
func (o LookupMetalProjectSSHKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of parent project (same as project_id).
func (o LookupMetalProjectSSHKeyResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

// The ID of parent project.
func (o LookupMetalProjectSSHKeyResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The text of the public key.
func (o LookupMetalProjectSSHKeyResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

func (o LookupMetalProjectSSHKeyResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

// The timestamp for the last time the SSH key was updated.
func (o LookupMetalProjectSSHKeyResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalProjectSSHKeyResult) string { return v.Updated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMetalProjectSSHKeyResultOutput{})
}
