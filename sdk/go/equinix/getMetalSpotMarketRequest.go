// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMetalSpotMarketRequest(ctx *pulumi.Context, args *LookupMetalSpotMarketRequestArgs, opts ...pulumi.InvokeOption) (*LookupMetalSpotMarketRequestResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupMetalSpotMarketRequestResult
	err := ctx.Invoke("equinix:index/getMetalSpotMarketRequest:GetMetalSpotMarketRequest", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetMetalSpotMarketRequest.
type LookupMetalSpotMarketRequestArgs struct {
	// The id of the Spot Market Request.
	RequestId string `pulumi:"requestId"`
}

// A collection of values returned by GetMetalSpotMarketRequest.
type LookupMetalSpotMarketRequestResult struct {
	// List of IDs of devices spawned by the referenced Spot Market Request.
	DeviceIds []string `pulumi:"deviceIds"`
	// Maximum number devices to be created.
	DevicesMax int `pulumi:"devicesMax"`
	// Miniumum number devices to be created.
	DevicesMin int `pulumi:"devicesMin"`
	// Date and time When the spot market request will be ended.
	EndAt string `pulumi:"endAt"`
	// Facility IDs where devices should be created.
	Facilities []string `pulumi:"facilities"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Maximum price user is willing to pay per hour per device.
	MaxBidPrice float64 `pulumi:"maxBidPrice"`
	// Metro where devices should be created.
	Metro string `pulumi:"metro"`
	// The device plan slug.
	Plan string `pulumi:"plan"`
	// Project ID.
	ProjectId string `pulumi:"projectId"`
	RequestId string `pulumi:"requestId"`
}

func LookupMetalSpotMarketRequestOutput(ctx *pulumi.Context, args LookupMetalSpotMarketRequestOutputArgs, opts ...pulumi.InvokeOption) LookupMetalSpotMarketRequestResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMetalSpotMarketRequestResult, error) {
			args := v.(LookupMetalSpotMarketRequestArgs)
			r, err := LookupMetalSpotMarketRequest(ctx, &args, opts...)
			var s LookupMetalSpotMarketRequestResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMetalSpotMarketRequestResultOutput)
}

// A collection of arguments for invoking GetMetalSpotMarketRequest.
type LookupMetalSpotMarketRequestOutputArgs struct {
	// The id of the Spot Market Request.
	RequestId pulumi.StringInput `pulumi:"requestId"`
}

func (LookupMetalSpotMarketRequestOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetalSpotMarketRequestArgs)(nil)).Elem()
}

// A collection of values returned by GetMetalSpotMarketRequest.
type LookupMetalSpotMarketRequestResultOutput struct{ *pulumi.OutputState }

func (LookupMetalSpotMarketRequestResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetalSpotMarketRequestResult)(nil)).Elem()
}

func (o LookupMetalSpotMarketRequestResultOutput) ToLookupMetalSpotMarketRequestResultOutput() LookupMetalSpotMarketRequestResultOutput {
	return o
}

func (o LookupMetalSpotMarketRequestResultOutput) ToLookupMetalSpotMarketRequestResultOutputWithContext(ctx context.Context) LookupMetalSpotMarketRequestResultOutput {
	return o
}

// List of IDs of devices spawned by the referenced Spot Market Request.
func (o LookupMetalSpotMarketRequestResultOutput) DeviceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) []string { return v.DeviceIds }).(pulumi.StringArrayOutput)
}

// Maximum number devices to be created.
func (o LookupMetalSpotMarketRequestResultOutput) DevicesMax() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) int { return v.DevicesMax }).(pulumi.IntOutput)
}

// Miniumum number devices to be created.
func (o LookupMetalSpotMarketRequestResultOutput) DevicesMin() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) int { return v.DevicesMin }).(pulumi.IntOutput)
}

// Date and time When the spot market request will be ended.
func (o LookupMetalSpotMarketRequestResultOutput) EndAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) string { return v.EndAt }).(pulumi.StringOutput)
}

// Facility IDs where devices should be created.
func (o LookupMetalSpotMarketRequestResultOutput) Facilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) []string { return v.Facilities }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMetalSpotMarketRequestResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) string { return v.Id }).(pulumi.StringOutput)
}

// Maximum price user is willing to pay per hour per device.
func (o LookupMetalSpotMarketRequestResultOutput) MaxBidPrice() pulumi.Float64Output {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) float64 { return v.MaxBidPrice }).(pulumi.Float64Output)
}

// Metro where devices should be created.
func (o LookupMetalSpotMarketRequestResultOutput) Metro() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) string { return v.Metro }).(pulumi.StringOutput)
}

// The device plan slug.
func (o LookupMetalSpotMarketRequestResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) string { return v.Plan }).(pulumi.StringOutput)
}

// Project ID.
func (o LookupMetalSpotMarketRequestResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupMetalSpotMarketRequestResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetalSpotMarketRequestResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMetalSpotMarketRequestResultOutput{})
}
